{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/view/view.component.css","webpack:///./src/app/view/view.component.html","webpack:///./src/app/view/view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport {Routes, RouterModule } from '@angular/router';\nimport { ViewComponent } from './view/view.component';\n\nconst routes: Routes =[\n  { path: '', component: HomeComponent},\n  { path: 'new', component: NewComponent},\n  { path: 'edit/:id', component: EditComponent},\n  { path: 'view/:id', component: ViewComponent},\n  { path: '**', component: HomeComponent},\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes), CommonModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n// import { AuthorService } from './author.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title='app';\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) {}\n  ngOnInit() {\n  }\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {HttpService} from './http.service';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { ViewComponent } from './view/view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NewComponent,\n    EditComponent,\n    ViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-md-left\\\">\\n        <h1 class=\\\"mt-4\\\">{{ Header }}</h1>\\n    </div>\\n    <div class=\\\"row justify-content-md-left\\\">\\n        <h4>Edit this pet</h4>\\n    </div>\\n    <div class=\\\"text-danger\\\" *ngIf = \\\"editError\\\"><p>{{editError.petname.message}}</p></div>\\n    <div class=\\\"row justify-content-md-left border border-dark p-4 rounded\\\">\\n      <div class=\\\"form-group row\\\" *ngIf =\\\"updatePet\\\">   \\n      <form (submit) =\\\"onUpdatePetClick(updatePet._id)\\\">\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-sm-5 col-form-label\\\">Pet name:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name = \\\"updatePet.petname\\\" required minlength=\\\"3\\\" [(ngModel)] = \\\"updatePet.petname\\\" #petname=\\\"ngModel\\\" value ={{updatePet.petname}}/>\\n                <div class=\\\"text-danger ml-3\\\" [hidden] = \\\"petname.valid\\\"><p>*Pet name is required and should be more than 3 characters</p></div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-sm-5 col-form-label\\\">Pet type:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name = \\\"updatePet.pettype\\\" required minlength=\\\"3\\\" [(ngModel)] = \\\"updatePet.pettype\\\" #pettype=\\\"ngModel\\\" value ={{updatePet.pettype}}/>\\n                <div class=\\\"text-danger ml-3\\\" [hidden] = \\\"pettype.valid\\\"><p>*Pet type is required and should be more than 3 characters </p></div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-sm-5 col-form-label\\\">Description:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name = \\\"updatePet.description\\\" required minlength=\\\"3\\\" [(ngModel)] = \\\"updatePet.description\\\" #description=\\\"ngModel\\\" \\n                value ={{updatePet.description}}/>\\n                <div class=\\\"text-danger ml-3\\\" [hidden] =\\\"description.valid\\\"><p>*Pet description is required and should be more than 3 characters</p></div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-sm-5 col-form-label\\\">Skills(optional):</label>\\n            </div>\\n            <div class=\\\"form-group-row\\\">\\n                    <label class=\\\"col-sm-5 col-form-label\\\">Skill 1:</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name= \\\"updatePet.skillone\\\" minlength=\\\"3\\\" [(ngModel)] = \\\"updatePet.skillone\\\" #skillone=\\\"ngModel\\\"\\n                    value ={{updatePet.skillone}}/>\\n            </div>\\n            <div class=\\\"form-group-row\\\">\\n                    <label class=\\\"col-sm-5 col-form-label\\\">Skill 2:</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control ml-3\\\"\\n                    name = \\\"updatePet.skilltwo\\\" \\n                    minlength=\\\"3\\\"\\n                    [(ngModel)] = \\\"updatePet.skilltwo\\\"\\n                    #skilltwo=\\\"ngModel\\\"\\n                    value ={{updatePet.skilltwo}}/>\\n            </div>\\n            <div class=\\\"form-group-row\\\">\\n                    <label class=\\\"col-sm-5 col-form-label\\\">Skill 3:</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name = \\\"updatePet.skillthree\\\" minlength=\\\"3\\\" [(ngModel)] = \\\"updatePet.skillthree\\\" #skillthree=\\\"ngModel\\\" value ={{updatePet.skillthree}}/>      \\n            </div>\\n            <div class=\\\"form-group-row mt-3\\\">\\n                <button class=\\\"btn btn-primary form-control ml-3\\\" [disabled] = \\\"!description.valid || !pettype.valid\\\" type=\\\"submit\\\">Edit pet</button>\\n            </div>\\n            <div class=\\\"form-group-row mt-3\\\">\\n                <button class=\\\"btn btn-primary form-control ml-3\\\" [routerLink]=\\\"['/view',updatePet._id]\\\">Cancel</button>\\n            </div>  \\n      </form>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router'\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  Header ='Pet Shelter';\n  constructor(\n    private _httpService: HttpService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n  ) { }\n  updatePet: any;\n  editError;\n  Id;\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => (this.Id = params['id']));\n    let pets = this._httpService.onePet(this.Id).subscribe(data => {\n    this.updatePet = data;\n    })\n  }\n  \n  onUpdatePetClick(id){\n    let editPetsObservable = this._httpService.editPet(id, this.updatePet);\n    editPetsObservable.subscribe(data => {\n    console.log(data, \"updateAuthor\");\n    \n        if(data['errors']){\n          this.editError = data['errors'];\n          console.log(this.editError, \"One errormessage\");\n        }\n        else {\n          console.log(this.updatePet._id);\n          this._router.navigate(['/view', this.updatePet._id]);\n        }\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-md-left\\\">\\n      <h1 class=\\\"mt-4\\\">{{ Header }}</h1>\\n  </div>\\n  <div class=\\\"row justify-content-md-left\\\">\\n    <h3>{{ SubHeader }}</h3>\\n  </div>\\n  <div class=\\\"row justify-content-md-right\\\">\\n      <a [routerLink]= \\\"['/new']\\\">Add a pet to the shelter</a>\\n  </div>\\n  <br>\\n  <div *ngIf = \\\"allPets\\\">\\n  <div class=\\\"row justify-content-md-left\\\">\\n      <table class=\\\"table table-striped table-bordered w-50\\\">\\n          <tr>\\n              <th>Name</th>\\n              <th>Type</th>\\n              <th class=\\\"text-center\\\">Actions</th>\\n          </tr>\\n          <tr *ngFor = \\\"let pet of allPets\\\" >\\n              <td>{{pet.petname}}</td>\\n              <td>{{pet.pettype}}</td>\\n              <td>\\n                  <button class=\\\"btn btn-primary ml-3 text-center\\\" [routerLink] = \\\"['/view', pet._id]\\\">Details</button>\\n                  <button class=\\\"btn btn-warning ml-3\\\" [routerLink] = \\\"['/edit', pet._id]\\\">Edit</button>            \\n              </td>\\n          </tr>\\n      </table>  \\n  </div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n  Header ='Pet Shelter';\n  SubHeader='These pets are looking for a home!';\n   allPets;\n   constructor(\n    private _router: Router,\n    private _httpService: HttpService,\n  ) {}\n\n  ngOnInit() {\n   this.getPets();\n  }\n\n  getPets(){\n    let getPetsObservable = this._httpService.getPet()\n    getPetsObservable.subscribe(data =>{ \n      console.log(\"Displayed all data\", data);\n      this.allPets = data;\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpService {\n  constructor(private _http: HttpClient) { }\n\n  getPet(){\n    return this._http.get('/public');\n  }\n\n  postPet(newPets){\n    return this._http.post('/public',newPets);\n  }\n\n  editPet(id:String, updateAuthor){\n    return this._http.put('/public/'+ id + '',updateAuthor);\n  }\n\n  onePet(id:String){\n    return this._http.get('/onepublic/'+id+'');\n  }\n\n  deletePet(id:String){\n    return this._http.delete('/newpublic/'+ id +'');\n  }\n  \n  votePet(id: String, quote){\n    return this._http.post('/updatepublic/'+ id, quote);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-md-left\\\">\\n      <h1 class=\\\"mt-4\\\">{{ Header }}</h1>\\n  </div>\\n  <div class=\\\"row justify-content-md-left\\\">\\n      <h4>{{ SubHeader }}</h4>\\n  </div>\\n <div class=\\\"text-danger\\\" *ngIf = \\\"error\\\"><p>{{error.petname.message}}</p></div>\\n  <div class=\\\"row justify-content-md-left border border-dark p-3 rounded\\\">\\n      <form (submit) =\\\"onCreatePetClick()\\\">\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-5 col-form-label\\\">Pet name:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name = \\\"newPets.petname\\\" required minlength=\\\"3\\\" [(ngModel)] = \\\"newPets.petname\\\" #petname=\\\"ngModel\\\"/>\\n            <div class=\\\"text-danger ml-3\\\" [hidden] = \\\"petname.valid\\\"><p>*The pet must have a name, and should be more than 3 characters</p></div>  \\n        </div>\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-5 col-form-label\\\">Pet type:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name = \\\"newPets.pettype\\\" required minlength=\\\"3\\\" [(ngModel)] = \\\"newPets.pettype\\\" #pettype=\\\"ngModel\\\" />\\n            <div class=\\\"text-danger ml-3\\\" [hidden] = \\\"pettype.valid\\\"><p>*The pet must have a type, and should be more than 3 characters</p></div>  \\n        </div>\\n          <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-5 col-form-label\\\">Description:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name = \\\"newPets.description\\\" required minlength=\\\"3\\\" [(ngModel)] = \\\"newPets.description\\\" #description=\\\"ngModel\\\"/>\\n              <div class=\\\"text-danger ml-3\\\" [hidden] = \\\"description.valid\\\"><p>*The pet must have a description, and should be more than 3 characters</p></div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-5 col-form-label\\\">Skills:</label>\\n          </div>\\n          <div class=\\\"form-group-row\\\">\\n              <label class=\\\"col-sm-5 col-form-label\\\">Skill 1:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name = \\\"newAuthors.skillone\\\" minlength=\\\"3\\\" [(ngModel)] = \\\"newPets.skillone\\\" #skillone=\\\"ngModel\\\"/>\\n          </div>\\n          <div class=\\\"form-group-row\\\">\\n              <label class=\\\"col-sm-5 col-form-label\\\">Skill 2:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name = \\\"newPets.skilltwo\\\" minlength=\\\"3\\\" [(ngModel)] = \\\"newPets.skilltwo\\\" #skilltwo=\\\"ngModel\\\"/>\\n          </div>\\n          <div class=\\\"form-group-row\\\">\\n              <label class=\\\"col-sm-5 col-form-label\\\">Skill 3:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control ml-3\\\" name = \\\"newPets.skillthree\\\" minlength=\\\"3\\\" [(ngModel)] = \\\"newPets.skillthree\\\" #skillthree=\\\"ngModel\\\"/>\\n          </div>\\n          <div class=\\\"form-group-row mt-3\\\">\\n              <button class=\\\"btn btn-primary form-control ml-3\\\" [disabled] = \\\"!petname.valid\\\" type=\\\"submit\\\">Add pet</button>\\n          </div>\\n          <div class=\\\"form-group-row mt-3\\\">\\n              <button class=\\\"btn btn-primary form-control ml-3\\\" routerLink=\\\"/\\\">Cancel</button>\\n          </div>        \\n        </form>\\n      </div>\\n    </div>\\n         \\n \\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\nHeader = 'Pet Shelter';\nSubHeader = 'Know of a pet needing a home?';\nnewPets: any;\nerror;\n  constructor(\n    private _router: Router,\n    private _httpService: HttpService,\n  ) {\n    this.newPets = {petname:\"\", pettype:\"\", description:\"\", skillone:\"\", skilltwo:\"\", skillthree:\"\"};\n  }\n  \n  ngOnInit() {\n  }\n\n  onCreatePetClick(){\n    let createPetObservable = this._httpService.postPet(this.newPets);\n    createPetObservable.subscribe(data=>{\n    console.log(data);\n        if(data['errors']){\n          this.error = data['errors'];\n          console.log(this.error, \"One errormessage\");\n        }\n        else {\n          this._router.navigate(['/']);\n        }\n      })\n      \n  }\n}\n\n","module.exports = \".container{\\n    width: 100%;\\n    height: 100%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-md-left\\\">\\n        <h1 class=\\\"mt-4\\\">{{ Header }}</h1>\\n    </div>\\n    <div class=\\\"row justify-content-md-left\\\">\\n        <a [routerLink]= \\\"['/']\\\"> Home </a>\\n    </div>\\n    <div *ngIf=\\\"updatePet\\\" class=\\\"row justify-content-md-left mt-3\\\">\\n        <strong><h3>Details about {{updatePet.petname}}</h3></strong>\\n    </div>\\n    <div *ngIf=\\\"updatePet\\\" class=\\\"row justify-content-md-left mt-2\\\">\\n        <strong>Pet Type: </strong> <p class=\\\"ml-2\\\">{{updatePet.pettype}}</p>\\n    </div>\\n    <div *ngIf=\\\"updatePet\\\" class=\\\"row justify-content-md-left\\\">\\n        <strong>Description: </strong> <p class=\\\"ml-2\\\">{{updatePet.description}}</p>\\n    </div>\\n    <div *ngIf=\\\"updatePet\\\" class=\\\"row justify-content-md-left\\\">\\n        <strong>Skills: </strong> \\n        <p class=\\\"ml-2\\\">{{updatePet.skillone}}</p>\\n    </div>\\n    <div *ngIf=\\\"updatePet\\\" class=\\\"row justify-content-md-left\\\">\\n        <p>{{updatePet.skilltwo}}</p>\\n    </div>\\n    <div *ngIf=\\\"updatePet\\\" class=\\\"row justify-content-md-left\\\">\\n          <p>{{updatePet.skillthree}}</p>    \\n    </div>\\n    <div *ngIf=\\\"updatePet\\\" class=\\\"row justify-content-md-left\\\">\\n        <strong>Likes: {{updatePet.likes}}</strong>\\n    </div>\\n\\n    <div class=\\\"row justify-content-md-left mt-5\\\">\\n      <button class=\\\"btn btn-success\\\" (click) = \\\"voteUp(updatePet._id)\\\" onclick=\\\"this.disabled = true\\\">Like this pet</button>\\n      <button class=\\\"btn btn-primary ml-3\\\" (click) = \\\"destroyPet(updatePet._id)\\\">Adopt this pet</button>\\n    </div>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router'\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n  Header ='Pet Shelter';\n  constructor(\n    private _httpService: HttpService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n  ) { }\n  updatePet: any;\n  editError;\n  Id;\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => (this.Id = params['id']));\n    let pets = this._httpService.onePet(this.Id).subscribe(data => {\n    this.updatePet = data;\n    })\n  }\n\n  \n  voteUp(qId) {\n  let votes = this._httpService.votePet(this.updatePet._id,\n    {\"voteVal\": 1 }).subscribe(data => {\n      this.updatePet = data;\n    });\n\n    }\n\n  destroyPet(id){\n    let deletePetObservable = this._httpService.deletePet(id)\n    deletePetObservable.subscribe(data => {\n      console.log(\"Deleted one quote\", data);\n      if(data['errors']){\n        this.editError = data['errors'];\n        console.log(this.editError, \"One errormessage\");\n      }\n      else {\n        this._router.navigate(['/']);\n        this.updatePet = data; \n      }\n    })\n  }\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}